#!/usr/bin/runhaskell

{-# LANGUAGE LambdaCase #-}

import Control.Monad

import Data.Time

import System.Console.ANSI
import System.Exit
import System.IO
import System.Locale
import System.Process

main = do
  setTitle "offlineimap-multishot"
  putStr "Password: "
  hFlush stdout
  hSetEcho stdin False
  passwd <- getLine
  putStr "\n\n"
  hSetEcho stdin True
  forever $ do
    (Just inh, _, _, ph) <- createProcess $
      (shell "offlineimap -o -k Repository_Remote:remotepassfile=/dev/stdin")
        {std_in = CreatePipe}
    hPutStrLn inh passwd
    hClose inh
    waitForProcess ph >>= \case ExitSuccess -> return ()
                                ExitFailure _ -> putChar '\a'
    showTime >>= putStrLn . (" *** at "++)
    getLine

showTime :: IO String
showTime = fmap (formatTime defaultTimeLocale "%H:%M:%S") getZonedTime
